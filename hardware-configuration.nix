# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usb_storage" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d81aa616-4840-46c1-addc-79e968dbeaba";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/B844-BF70";
      fsType = "vfat";
      options = [ "fmask=0077" "dmask=0077" ];
    };

  swapDevices =
    [ { device = "/dev/disk/by-uuid/15152571-0b2e-494b-a1a2-f23bd8cbdfbd"; }
    ];
    
    
  # NVIDIA drivers
  # -----------------------------------------------------------------
  hardware.nvidia = {
    open                   = false; # Use proprietary closed-source kernel modules
    modesetting.enable     = true;
    powerManagement.enable = true;
    nvidiaSettings         = true;
    package = config.boot.kernelPackages.nvidiaPackages.stable;
  };
  # -----------------------------------------------------------------

  # Gaming Compatibility
  # -----------------------------------------------------------------
  hardware.graphics = { 
   enable32Bit = true;
    extraPackages32 = with pkgs; [ 
      libva 
      pkgsi686Linux.libvdpau
      pkgsi686Linux.mesa
    ];
    extraPackages = with pkgs; [ nvidia-vaapi-driver ];
  };

  hardware.opentabletdriver.enable = true;
  hardware.opentabletdriver.daemon.enable = true;

  # -----------------------------------------------------------------

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
